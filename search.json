[{"path":"https://giuseppealfonzetti.github.io/plFA/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 plFA authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://giuseppealfonzetti.github.io/plFA/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Giuseppe Alfonzetti. Author, maintainer. Haziq Jamil. Author.","code":""},{"path":"https://giuseppealfonzetti.github.io/plFA/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Alfonzetti G, Jamil H (2025). plFA: Fast pairwise likelihood estimation factor models ordinal data. R package version 0.1.0, https://giuseppealfonzetti.github.io/plFA/.","code":"@Manual{,   title = {plFA: Fast pairwise likelihood estimation of factor models for ordinal data},   author = {Giuseppe Alfonzetti and Haziq Jamil},   year = {2025},   note = {R package version 0.1.0},   url = {https://giuseppealfonzetti.github.io/plFA/}, }"},{"path":"https://giuseppealfonzetti.github.io/plFA/index.html","id":"plfa","dir":"","previous_headings":"","what":"Fast pairwise likelihood estimation of factor models for ordinal data","title":"Fast pairwise likelihood estimation of factor models for ordinal data","text":"plFA package allows estimation confirmatory factor models ordinal data using stochastic numeric pairwise likelihood optimisation.","code":""},{"path":"https://giuseppealfonzetti.github.io/plFA/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Fast pairwise likelihood estimation of factor models for ordinal data","text":"can install development version plFA GitHub : package installed, can load : startup message indicates plFA package provides version cfa() function, can used estimate plFA models using lavaan syntax. See example.","code":"# install.packages(\"devtools\") devtools::install_github(\"giuseppealfonzetti/plFA\") library(plFA) #> ℹ Loading required package: lavaan #> This is lavaan 0.6-19 #> lavaan is FREE software! Please report any bugs. #>  #> ── Conflicts ───────────────────────────────────────────────────── plFA 0.1.0 ── #> ✖ plFA::cfa() masks lavaan::cfa()"},{"path":"https://giuseppealfonzetti.github.io/plFA/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Fast pairwise likelihood estimation of factor models for ordinal data","text":"Consider data containing 25 personality items measured 6-point scale International Personality Item Pool (IPIP) dataset. data set available plFA package can loaded following code: fit latent factor analysis model 5 factors, first 5 items load first factor , can use fit_plFA() function. preparation, must build following objects supplied list CONSTR_LIST argument: CONSTRMAT: matrix constraints factor loadings. CORRFLAG: flag indicating whether factor correlations estimated. CONSTRVAR: vector constraints factor variances, . STDLV: flag indicating whether factor loadings standardised. LLC: list indicating linear constraints factor loading estimations, . ingredients prepared using code . can now fit factor model: default method using optimiser ucminf package, works well small data sizes. Alternatively, user may choose METHOD = \"SA\" turn stochastic approximation algorithm. Use function getPar() extract parameter estimates: Computing standard errors done separately using computeVar() function:","code":"data(\"bfi\") head(bfi) #> # A tibble: 6 × 28 #>   A1    A2    A3    A4    A5    C1    C2    C3    C4    C5    E1    E2    E3    #>   <ord> <ord> <ord> <ord> <ord> <ord> <ord> <ord> <ord> <ord> <ord> <ord> <ord> #> 1 6     6     5     6     5     6     6     6     1     3     2     1     6     #> 2 4     3     1     5     1     3     2     4     2     4     3     6     4     #> 3 4     4     5     6     5     4     3     5     3     2     1     3     2     #> 4 4     5     2     2     1     5     5     5     2     2     3     4     3     #> 5 1     5     6     5     6     4     3     2     4     5     2     1     2     #> 6 2     6     5     6     5     3     5     6     3     6     2     2     4     #> # ℹ 15 more variables: E4 <ord>, E5 <ord>, N1 <ord>, N2 <ord>, N3 <ord>, #> #   N4 <ord>, N5 <ord>, O1 <ord>, O2 <ord>, O3 <ord>, O4 <ord>, O5 <ord>, #> #   gender <int>, education <int>, age <int> p <- 25         # number of items q <- 5          # number of factors n <- nrow(bfi)  # number of observations  # Convert data frame to matrix, with each item taking values 0,1,2,...,5 D <- as.matrix(data.frame(lapply(bfi[, 1:p], as.numeric))) - 1 head(D) #>      A1 A2 A3 A4 A5 C1 C2 C3 C4 C5 E1 E2 E3 E4 E5 N1 N2 N3 N4 N5 O1 O2 O3 O4 O5 #> [1,]  5  5  4  5  4  5  5  5  0  2  1  0  5  4  5  2  4  1  1  2  3  2  4  5  0 #> [2,]  3  2  0  4  0  2  1  3  1  3  2  5  3  1  0  5  2  1  5  3  2  1  3  4  2 #> [3,]  3  3  4  5  4  3  2  4  2  1  0  2  1  4  3  2  2  3  1  2  4  2  4  5  2 #> [4,]  3  4  1  1  0  4  4  4  1  1  2  3  2  5  4  1  3  1  1  2  4  1  4  4  4 #> [5,]  0  4  5  4  5  3  2  1  3  4  1  0  1  4  1  1  1  1  1  1  5  0  4  4  1 #> [6,]  1  5  4  5  4  2  4  5  2  5  1  1  3  5  5  3  3  3  5  5  5  0  4  5  0  # Constraint matrix: NA indicate free loadings constrmat <- build_constrMat(P = p, Q = q, STRUCT = \"simple\") head(constrmat, 12) #>       [,1] [,2] [,3] [,4] [,5] #>  [1,]   NA    0    0    0    0 #>  [2,]   NA    0    0    0    0 #>  [3,]   NA    0    0    0    0 #>  [4,]   NA    0    0    0    0 #>  [5,]   NA    0    0    0    0 #>  [6,]    0   NA    0    0    0 #>  [7,]    0   NA    0    0    0 #>  [8,]    0   NA    0    0    0 #>  [9,]    0   NA    0    0    0 #> [10,]    0   NA    0    0    0 #> [11,]    0    0   NA    0    0 #> [12,]    0    0   NA    0    0  # Build constraint list constr_list <- list(   CONSTRMAT = constrmat,   CORRFLAG = TRUE,   CONSTRVAR = rep(1, q),  # these options standardise the     STDLV = TRUE,           # factor variances   LLC = NULL ) fit <- fit_plFA(   DATA = D,    CONSTR_LIST = constr_list,   METHOD = \"ucminf\",   VERBOSE = TRUE ) #> - Computing frequencies... #> - Initialising with SA ... Done. #> - Optimising with ucminf... #> Done! (4.68 secs) print(fit) #> - Dimensions: #>    - Sample size: 2236  #>    - Items: 25 ( 300  pairs) #>    - Latent traits: 5  #>  #>  - Free parameters: #>    - Thresholds: 125  #>    - Loadings: 25  #>    - Latent correlations: 10  #>    - Latent variances: 0  #>    - Total: 160  #>  #> - Numerical estimate obtained via ucminf. #>  #>     Total time: 4.68 s (Data reduction: 0.05 s) #>     Cores used: 1  #>   #> - Use getPar() to extract parameter estimates. getPar(fit) #> $thresholds #>   [1] -0.40342975  0.36296158  0.77979396  1.27012725  1.88847654 -2.15645578 #>   [7] -1.55843441 -1.22269675 -0.51268052  0.45551687 -1.84890939 -1.33210658 #>  [13] -0.99519211 -0.34954618  0.59330668 -1.71624967 -1.20615048 -0.92738336 #>  [19] -0.42301003  0.20174764 -2.01475684 -1.36362928 -0.94614150 -0.27696867 #>  [25]  0.65201808 -2.01132631 -1.43219461 -0.96036696 -0.26857279  0.73619150 #>  [31] -1.87965681 -1.20296001 -0.78457218 -0.14617313  0.82755714 -1.88675414 #>  [37] -1.19146229 -0.77840530 -0.02248862  0.92135042 -0.55048487  0.20834125 #>  [43]  0.66399977  1.28873806  2.03317057 -0.88613864 -0.25386319  0.04740555 #>  [49]  0.63010147  1.30278349 -0.72803433 -0.06273648  0.31148908  0.78947419 #>  [55]  1.37340971 -0.86693287 -0.15288018  0.16864075  0.75418319  1.31961507 #>  [61] -1.62489332 -1.01028743 -0.51842151  0.26713987  1.14770838 -1.62791281 #>  [67] -1.06094033 -0.71552961 -0.26268359  0.64044010 -1.81316372 -1.19864360 #>  [73] -0.79811409 -0.16798431  0.78993071 -0.71063704 -0.06018644  0.33492797 #>  [79]  0.89235623  1.48922166 -1.16284396 -0.47258028 -0.09397253  0.57016151 #>  [85]  1.25928746 -0.92354249 -0.21037911  0.10580162  0.68502246  1.35122727 #>  [91] -0.96082085 -0.23512431  0.15468532  0.76811843  1.34146250 -0.71406194 #>  [97] -0.03538097  0.29728057  0.82453916  1.35765031 -2.44741937 -1.69521428 #> [103] -1.19002335 -0.42977506  0.45472814 -0.56518561  0.13085747  0.49458507 #> [109]  1.01070361  1.55717203 -1.98983391 -1.45112391 -0.95609874 -0.12195569 #> [115]  0.83877632 -2.18710334 -1.56666348 -1.24590767 -0.60730957  0.25489866 #> [121] -0.58430883  0.26112088  0.77087279  1.34085101  1.93118790 #>  #> $loadings #>             [,1]       [,2]       [,3]      [,4]       [,5] #>  [1,] -0.3353209  0.0000000  0.0000000 0.0000000  0.0000000 #>  [2,]  0.6627841  0.0000000  0.0000000 0.0000000  0.0000000 #>  [3,]  0.7705674  0.0000000  0.0000000 0.0000000  0.0000000 #>  [4,]  0.5450794  0.0000000  0.0000000 0.0000000  0.0000000 #>  [5,]  0.7737092  0.0000000  0.0000000 0.0000000  0.0000000 #>  [6,]  0.0000000  0.5644095  0.0000000 0.0000000  0.0000000 #>  [7,]  0.0000000  0.5707375  0.0000000 0.0000000  0.0000000 #>  [8,]  0.0000000  0.5430038  0.0000000 0.0000000  0.0000000 #>  [9,]  0.0000000 -0.7602739  0.0000000 0.0000000  0.0000000 #> [10,]  0.0000000 -0.7055654  0.0000000 0.0000000  0.0000000 #> [11,]  0.0000000  0.0000000 -0.5401615 0.0000000  0.0000000 #> [12,]  0.0000000  0.0000000 -0.7270841 0.0000000  0.0000000 #> [13,]  0.0000000  0.0000000  0.6902125 0.0000000  0.0000000 #> [14,]  0.0000000  0.0000000  0.7419254 0.0000000  0.0000000 #> [15,]  0.0000000  0.0000000  0.6202669 0.0000000  0.0000000 #> [16,]  0.0000000  0.0000000  0.0000000 0.8365348  0.0000000 #> [17,]  0.0000000  0.0000000  0.0000000 0.8007918  0.0000000 #> [18,]  0.0000000  0.0000000  0.0000000 0.7554746  0.0000000 #> [19,]  0.0000000  0.0000000  0.0000000 0.6664113  0.0000000 #> [20,]  0.0000000  0.0000000  0.0000000 0.5696504  0.0000000 #> [21,]  0.0000000  0.0000000  0.0000000 0.0000000  0.6474240 #> [22,]  0.0000000  0.0000000  0.0000000 0.0000000 -0.4443222 #> [23,]  0.0000000  0.0000000  0.0000000 0.0000000  0.8077955 #> [24,]  0.0000000  0.0000000  0.0000000 0.0000000  0.1355670 #> [25,]  0.0000000  0.0000000  0.0000000 0.0000000 -0.4862491 #>  #> $latent_correlations #>            [,1]       [,2]       [,3]       [,4]       [,5] #> [1,]  1.0000000  0.3697391  0.7022438 -0.2317069  0.2693949 #> [2,]  0.3697391  1.0000000  0.3901962 -0.3012799  0.3221120 #> [3,]  0.7022438  0.3901962  1.0000000 -0.2674171  0.4659849 #> [4,] -0.2317069 -0.3012799 -0.2674171  1.0000000 -0.1463728 #> [5,]  0.2693949  0.3221120  0.4659849 -0.1463728  1.0000000 var <- computeVar(OBJ = fit, DATA = D, VERBOSE = TRUE) #> - Estimating J... #> - Computing the variances... #> Done! (6.83 secs) str(var) #> List of 8 #>  $ trJacob            : num [1:160, 1:160] 1 0 0 0 0 ... #>  $ H                  : logi NA #>  $ invH               : num [1:160, 1:160] 0.1043 0.0793 0.0736 0.0667 0.0582 ... #>  $ J                  : num [1:160, 1:160] 484 -265 0 0 0 ... #>  $ vcov               : num [1:160, 1:160] 7.02 6.15 5.33 3.74 4.08 ... #>  $ asymptotic_variance: num [1:160] 7.02 8.48 10.16 16.8 43.41 ... #>  $ optimisation_noise : logi NA #>  $ RTime              : num 6.83  # Standard errors head(sqrt(diag(var$vcov) / n)) #> [1] 0.05603846 0.06158027 0.06739821 0.08669167 0.13933213 0.13607636"},{"path":"https://giuseppealfonzetti.github.io/plFA/index.html","id":"lavaan-wrapper","dir":"","previous_headings":"","what":"{lavaan} wrapper","title":"Fast pairwise likelihood estimation of factor models for ordinal data","text":"package also provides user-friendly lavaan-style interface estimate factor analysis models using cfa() function. Let’s rerun example, time using stochastic approximation algorithm. All1 lavaan methods carry , :","code":"# {lavaan} model syntax, not in the same order as the data mod <- \"   opn =~ O1 + O2 + O3 + O4 + O5  # Openness   con =~ C1 + C2 + C3 + C4 + C5  # Conscientiousness   ext =~ E1 + E2 + E3 + E4 + E5  # Extraversion   agr =~ A1 + A2 + A3 + A4 + A5  # Agreeableness   neu =~ N1 + N2 + N3 + N4 + N5  # Neuroticism \"  # Fit the model (note, this cfa() function is from the plFA package) fit <- cfa(   model = mod,    data = bfi,    std.lv = TRUE,   estimator.args = list(method = \"SA\", ncores = 4) ) #> Warning in fit_plFA(DATA = D, CONSTR_LIST = constr_list, METHOD = method, : #> Possible divergent trajectories detected. Try decreasing STEP0.  fit@timing$total  # total time in seconds #> [1] 8.874558  summary(fit) #> plFA 0.1.0  #>   ⨉ #> lavaan 0.6-19 ended normally after 2000 iterations #>  #>   Estimator                                        PML #>   Optimization method                               SA #>   Number of model parameters                       160 #>  #>   Number of observations                          2236 #>  #>  #> Parameter Estimates: #>  #>   Parameterization                               Delta #>   Standard errors                             Sandwich #>   Information bread                           Observed #>   Observed information based on                Hessian #>  #> Latent Variables: #>                    Estimate  Std.Err  z-value  P(>|z|) #>   opn =~                                               #>     O1                0.323    0.091    3.562    0.000 #>     O2               -0.286    0.046   -6.214    0.000 #>     O3                0.359    0.034   10.474    0.000 #>     O4               -0.114    0.027   -4.259    0.000 #>     O5               -0.245    0.027   -9.168    0.000 #>   con =~                                               #>     C1                0.500    0.028   18.101    0.000 #>     C2                0.483    0.026   18.389    0.000 #>     C3                0.494    0.027   17.996    0.000 #>     C4               -0.699    0.032  -21.954    0.000 #>     C5               -0.673    0.042  -16.053    0.000 #>   ext =~                                               #>     E1               -0.502    0.057   -8.768    0.000 #>     E2               -0.696    0.039  -17.837    0.000 #>     E3                0.618    0.031   19.976    0.000 #>     E4                0.726    0.026   28.050    0.000 #>     E5                0.570    0.029   19.415    0.000 #>   agr =~                                               #>     A1               -0.310    0.069   -4.457    0.000 #>     A2                0.625    0.042   14.729    0.000 #>     A3                0.729    0.035   20.597    0.000 #>     A4                0.533    0.028   19.025    0.000 #>     A5                0.752    0.026   28.691    0.000 #>   neu =~                                               #>     N1                0.666    0.028   24.186    0.000 #>     N2                0.647    0.026   24.424    0.000 #>     N3                0.644    0.029   21.955    0.000 #>     N4                0.659    0.037   17.800    0.000 #>     N5                0.541    0.055    9.814    0.000 #>  #> Covariances: #>                    Estimate  Std.Err  z-value  P(>|z|) #>   opn ~~                                               #>     con               0.527    0.078    6.760    0.000 #>     ext               0.485    0.061    7.998    0.000 #>     agr               0.348    0.049    7.135    0.000 #>     neu              -1.000    0.061  -16.442    0.000 #>   con ~~                                               #>     ext               0.539    0.046   11.717    0.000 #>     agr               0.480    0.061    7.857    0.000 #>     neu              -0.535  660.613   -0.001    0.999 #>   ext ~~                                               #>     agr               0.839 8410.423    0.000    1.000 #>     neu              -0.487 4730.023   -0.000    1.000 #>   agr ~~                                               #>     neu              -0.351 2229.362   -0.000    1.000 #>  #> Thresholds: #>                    Estimate  Std.Err  z-value  P(>|z|) #>     O1|t1            -2.440    0.058  -41.995    0.000 #>     O1|t2            -1.692    0.039  -43.539    0.000 #>     O1|t3            -1.188    0.031  -38.034    0.000 #>     O1|t4            -0.429    0.027  -16.154    0.000 #>     O1|t5             0.455    0.029   15.795    0.000 #>     O2|t1            -0.566    0.053  -10.766    0.000 #>     O2|t2             0.130    0.034    3.763    0.000 #>     O2|t3             0.494    0.029   16.759    0.000 #>     O2|t4             1.011    0.026   38.490    0.000 #>     O2|t5             1.559    0.030   52.753    0.000 #>     O3|t1            -1.990    0.053  -37.751    0.000 #>     O3|t2            -1.450    0.034  -42.174    0.000 #>     O3|t3            -0.954    0.029  -32.390    0.000 #>     O3|t4            -0.121    0.026   -4.579    0.000 #>     O3|t5             0.839    0.031   27.439    0.000 #>     O4|t1            -2.188    0.028  -78.900    0.000 #>     O4|t2            -1.566    0.026  -59.092    0.000 #>     O4|t3            -1.245    0.028  -43.728    0.000 #>     O4|t4            -0.607    0.036  -16.887    0.000 #>     O4|t5             0.255    0.060    4.262    0.000 #>     O5|t1            -0.584    0.030  -19.265    0.000 #>     O5|t2             0.260    0.027    9.737    0.000 #>     O5|t3             0.770    0.026   29.204    0.000 #>     O5|t4             1.341    0.028   47.310    0.000 #>     O5|t5             1.935    0.036   53.480    0.000 #>     C1|t1            -2.012    0.029  -69.425    0.000 #>     C1|t2            -1.432    0.026  -54.513    0.000 #>     C1|t3            -0.960    0.027  -36.030    0.000 #>     C1|t4            -0.268    0.029   -9.127    0.000 #>     C1|t5             0.736    0.037   19.633    0.000 #>     C2|t1            -1.880    0.030  -62.272    0.000 #>     C2|t2            -1.203    0.026  -45.593    0.000 #>     C2|t3            -0.784    0.026  -29.779    0.000 #>     C2|t4            -0.146    0.029   -5.014    0.000 #>     C2|t5             0.828    0.036   22.787    0.000 #>     C3|t1            -1.887    0.044  -43.313    0.000 #>     C3|t2            -1.191    0.032  -37.560    0.000 #>     C3|t3            -0.778    0.028  -28.249    0.000 #>     C3|t4            -0.022    0.026   -0.839    0.401 #>     C3|t5             0.921    0.033   27.658    0.000 #>     C4|t1            -0.550    0.043  -12.678    0.000 #>     C4|t2             0.208    0.032    6.446    0.000 #>     C4|t3             0.663    0.029   22.962    0.000 #>     C4|t4             1.289    0.027   48.361    0.000 #>     C4|t5             2.034    0.028   71.786    0.000 #>     C5|t1            -0.886    0.050  -17.834    0.000 #>     C5|t2            -0.254    0.034   -7.403    0.000 #>     C5|t3             0.047    0.030    1.588    0.112 #>     C5|t4             0.630    0.026   23.888    0.000 #>     C5|t5             1.303    0.029   44.644    0.000 #>     E1|t1            -0.728    0.027  -26.845    0.000 #>     E1|t2            -0.063    0.027   -2.340    0.019 #>     E1|t3             0.311    0.029   10.579    0.000 #>     E1|t4             0.789    0.036   22.199    0.000 #>     E1|t5             1.374    0.053   26.090    0.000 #>     E2|t1            -0.867    0.066  -13.086    0.000 #>     E2|t2            -0.153    0.042   -3.677    0.000 #>     E2|t3             0.168    0.035    4.828    0.000 #>     E2|t4             0.754    0.028   27.308    0.000 #>     E2|t5             1.320    0.027   48.405    0.000 #>     E3|t1            -1.625    0.051  -31.902    0.000 #>     E3|t2            -1.010    0.037  -27.665    0.000 #>     E3|t3            -0.518    0.032  -16.431    0.000 #>     E3|t4             0.268    0.027    9.946    0.000 #>     E3|t5             1.147    0.028   40.983    0.000 #>     E4|t1            -1.628    0.047  -35.005    0.000 #>     E4|t2            -1.061    0.035  -30.626    0.000 #>     E4|t3            -0.715    0.031  -23.069    0.000 #>     E4|t4            -0.262    0.027   -9.638    0.000 #>     E4|t5             0.641    0.027   24.149    0.000 #>     E5|t1            -1.813    0.058  -31.120    0.000 #>     E5|t2            -1.199    0.037  -32.163    0.000 #>     E5|t3            -0.798    0.031  -25.659    0.000 #>     E5|t4            -0.167    0.027   -6.267    0.000 #>     E5|t5             0.790    0.028   27.869    0.000 #>     A1|t1            -0.404    0.029  -14.058    0.000 #>     A1|t2             0.363    0.026   13.868    0.000 #>     A1|t3             0.779    0.027   29.339    0.000 #>     A1|t4             1.270    0.030   42.018    0.000 #>     A1|t5             1.889    0.040   47.620    0.000 #>     A2|t1            -2.156    0.034  -63.932    0.000 #>     A2|t2            -1.558    0.027  -57.132    0.000 #>     A2|t3            -1.222    0.026  -46.825    0.000 #>     A2|t4            -0.512    0.028  -18.580    0.000 #>     A2|t5             0.456    0.035   13.056    0.000 #>     A3|t1            -1.849    0.031  -60.157    0.000 #>     A3|t2            -1.332    0.026  -50.578    0.000 #>     A3|t3            -0.995    0.026  -37.985    0.000 #>     A3|t4            -0.349    0.028  -12.251    0.000 #>     A3|t5             0.593    0.037   16.042    0.000 #>     A4|t1            -1.716    0.031  -54.867    0.000 #>     A4|t2            -1.206    0.027  -45.277    0.000 #>     A4|t3            -0.927    0.026  -35.255    0.000 #>     A4|t4            -0.423    0.029  -14.523    0.000 #>     A4|t5             0.202    0.037    5.499    0.000 #>     A5|t1            -2.015    0.029  -69.706    0.000 #>     A5|t2            -1.363    0.026  -51.739    0.000 #>     A5|t3            -0.945    0.027  -35.406    0.000 #>     A5|t4            -0.276    0.030   -9.281    0.000 #>     A5|t5             0.652    0.037   17.528    0.000 #>     N1|t1            -0.711    0.026  -27.596    0.000 #>     N1|t2            -0.059    0.025   -2.368    0.018 #>     N1|t3             0.336    0.026   13.009    0.000 #>     N1|t4             0.893    0.027   33.177    0.000 #>     N1|t5             1.488    0.025   59.289    0.000 #>     N2|t1            -1.163    0.020  -57.086    0.000 #>     N2|t2            -0.472    0.021  -22.866    0.000 #>     N2|t3            -0.094    0.020   -4.687    0.000 #>     N2|t4             0.571    0.017   32.830    0.000 #>     N2|t5             1.259    0.016   77.644    0.000 #>     N3|t1            -0.923    0.018  -50.297    0.000 #>     N3|t2            -0.210    0.014  -15.419    0.000 #>     N3|t3             0.106    0.015    6.874    0.000 #>     N3|t4             0.685    0.014   49.495    0.000 #>     N3|t5             1.350    0.016   83.756    0.000 #>     N4|t1            -0.960    0.022  -44.527    0.000 #>     N4|t2            -0.234    0.017  -13.908    0.000 #>     N4|t3             0.155    0.014   10.911    0.000 #>     N4|t4             0.767    0.020   39.305    0.000 #>     N4|t5             1.339    0.014   96.681    0.000 #>     N5|t1            -0.714    0.016  -45.090    0.000 #>     N5|t2            -0.035    0.017   -2.092    0.036 #>     N5|t3             0.298    0.016   18.377    0.000 #>     N5|t4             0.824    0.016   50.829    0.000 #>     N5|t5             1.357    0.018   74.267    0.000 #>  #> Variances: #>                    Estimate  Std.Err  z-value  P(>|z|) #>    .O1                0.896                            #>    .O2                0.918                            #>    .O3                0.871                            #>    .O4                0.987                            #>    .O5                0.940                            #>    .C1                0.750                            #>    .C2                0.767                            #>    .C3                0.756                            #>    .C4                0.511                            #>    .C5                0.547                            #>    .E1                0.748                            #>    .E2                0.516                            #>    .E3                0.618                            #>    .E4                0.473                            #>    .E5                0.675                            #>    .A1                0.904                            #>    .A2                0.610                            #>    .A3                0.469                            #>    .A4                0.716                            #>    .A5                0.435                            #>    .N1                0.557                            #>    .N2                0.582                            #>    .N3                0.585                            #>    .N4                0.566                            #>    .N5                0.708                            #>     opn               1.000                            #>     con               1.000                            #>     ext               1.000                            #>     agr               1.000                            #>     neu               1.000 coef(fit) #>  opn=~O1  opn=~O2  opn=~O3  opn=~O4  opn=~O5  con=~C1  con=~C2  con=~C3  #>    0.323   -0.286    0.359   -0.114   -0.245    0.500    0.483    0.494  #>  con=~C4  con=~C5  ext=~E1  ext=~E2  ext=~E3  ext=~E4  ext=~E5  agr=~A1  #>   -0.699   -0.673   -0.502   -0.696    0.618    0.726    0.570   -0.310  #>  agr=~A2  agr=~A3  agr=~A4  agr=~A5  neu=~N1  neu=~N2  neu=~N3  neu=~N4  #>    0.625    0.729    0.533    0.752    0.666    0.647    0.644    0.659  #>  neu=~N5    O1|t1    O1|t2    O1|t3    O1|t4    O1|t5    O2|t1    O2|t2  #>    0.541   -2.440   -1.692   -1.188   -0.429    0.455   -0.566    0.130  #>    O2|t3    O2|t4    O2|t5    O3|t1    O3|t2    O3|t3    O3|t4    O3|t5  #>    0.494    1.011    1.559   -1.990   -1.450   -0.954   -0.121    0.839  #>    O4|t1    O4|t2    O4|t3    O4|t4    O4|t5    O5|t1    O5|t2    O5|t3  #>   -2.188   -1.566   -1.245   -0.607    0.255   -0.584    0.260    0.770  #>    O5|t4    O5|t5    C1|t1    C1|t2    C1|t3    C1|t4    C1|t5    C2|t1  #>    1.341    1.935   -2.012   -1.432   -0.960   -0.268    0.736   -1.880  #>    C2|t2    C2|t3    C2|t4    C2|t5    C3|t1    C3|t2    C3|t3    C3|t4  #>   -1.203   -0.784   -0.146    0.828   -1.887   -1.191   -0.778   -0.022  #>    C3|t5    C4|t1    C4|t2    C4|t3    C4|t4    C4|t5    C5|t1    C5|t2  #>    0.921   -0.550    0.208    0.663    1.289    2.034   -0.886   -0.254  #>    C5|t3    C5|t4    C5|t5    E1|t1    E1|t2    E1|t3    E1|t4    E1|t5  #>    0.047    0.630    1.303   -0.728   -0.063    0.311    0.789    1.374  #>    E2|t1    E2|t2    E2|t3    E2|t4    E2|t5    E3|t1    E3|t2    E3|t3  #>   -0.867   -0.153    0.168    0.754    1.320   -1.625   -1.010   -0.518  #>    E3|t4    E3|t5    E4|t1    E4|t2    E4|t3    E4|t4    E4|t5    E5|t1  #>    0.268    1.147   -1.628   -1.061   -0.715   -0.262    0.641   -1.813  #>    E5|t2    E5|t3    E5|t4    E5|t5    A1|t1    A1|t2    A1|t3    A1|t4  #>   -1.199   -0.798   -0.167    0.790   -0.404    0.363    0.779    1.270  #>    A1|t5    A2|t1    A2|t2    A2|t3    A2|t4    A2|t5    A3|t1    A3|t2  #>    1.889   -2.156   -1.558   -1.222   -0.512    0.456   -1.849   -1.332  #>    A3|t3    A3|t4    A3|t5    A4|t1    A4|t2    A4|t3    A4|t4    A4|t5  #>   -0.995   -0.349    0.593   -1.716   -1.206   -0.927   -0.423    0.202  #>    A5|t1    A5|t2    A5|t3    A5|t4    A5|t5    N1|t1    N1|t2    N1|t3  #>   -2.015   -1.363   -0.945   -0.276    0.652   -0.711   -0.059    0.336  #>    N1|t4    N1|t5    N2|t1    N2|t2    N2|t3    N2|t4    N2|t5    N3|t1  #>    0.893    1.488   -1.163   -0.472   -0.094    0.571    1.259   -0.923  #>    N3|t2    N3|t3    N3|t4    N3|t5    N4|t1    N4|t2    N4|t3    N4|t4  #>   -0.210    0.106    0.685    1.350   -0.960   -0.234    0.155    0.767  #>    N4|t5    N5|t1    N5|t2    N5|t3    N5|t4    N5|t5 opn~~con opn~~ext  #>    1.339   -0.714   -0.035    0.298    0.824    1.357    0.527    0.485  #> opn~~agr opn~~neu con~~ext con~~agr con~~neu ext~~agr ext~~neu agr~~neu  #>    0.348   -1.000    0.539    0.480   -0.535    0.839   -0.487   -0.351 head(partable(fit)) #>   id lhs op rhs user block group free ustart exo label plabel  start    est #> 1  1 opn =~  O1    1     1     1    1     NA   0         .p1.  0.614  0.323 #> 2  2 opn =~  O2    1     1     1    2     NA   0         .p2. -0.504 -0.286 #> 3  3 opn =~  O3    1     1     1    3     NA   0         .p3.  0.709  0.359 #> 4  4 opn =~  O4    1     1     1    4     NA   0         .p4.  0.346 -0.114 #> 5  5 opn =~  O5    1     1     1    5     NA   0         .p5. -0.590 -0.245 #> 6  6 con =~  C1    1     1     1    6     NA   0         .p6.  0.638  0.500 #>      se #> 1 0.091 #> 2 0.046 #> 3 0.034 #> 4 0.027 #> 5 0.027 #> 6 0.028"},{"path":"https://giuseppealfonzetti.github.io/plFA/index.html","id":"session-information","dir":"","previous_headings":"","what":"Session information","title":"Fast pairwise likelihood estimation of factor models for ordinal data","text":"","code":"sessioninfo::session_info() #> ─ Session info ─────────────────────────────────────────────────────────────── #>  setting  value #>  version  R version 4.4.1 (2024-06-14) #>  os       macOS 15.2 #>  system   aarch64, darwin20 #>  ui       X11 #>  language (EN) #>  collate  en_US.UTF-8 #>  ctype    en_US.UTF-8 #>  tz       Asia/Brunei #>  date     2025-02-01 #>  pandoc   3.2 @ /Applications/RStudio.app/Contents/Resources/app/quarto/bin/tools/aarch64/ (via rmarkdown) #>  #> ─ Packages ─────────────────────────────────────────────────────────────────── #>  package      * version    date (UTC) lib source #>  cli            3.6.3      2024-06-21 [1] CRAN (R 4.4.0) #>  colorspace     2.1-1      2024-07-26 [1] CRAN (R 4.4.0) #>  digest         0.6.37     2024-08-19 [1] CRAN (R 4.4.1) #>  dplyr          1.1.4      2023-11-17 [1] CRAN (R 4.4.0) #>  evaluate       1.0.1      2024-10-10 [1] CRAN (R 4.4.1) #>  fastmap        1.2.0      2024-05-15 [1] CRAN (R 4.4.0) #>  generics       0.1.3      2022-07-05 [1] CRAN (R 4.4.0) #>  ggplot2        3.5.1      2024-04-23 [1] CRAN (R 4.4.0) #>  glue           1.8.0      2024-09-30 [1] CRAN (R 4.4.1) #>  gtable         0.3.6      2024-10-25 [1] CRAN (R 4.4.1) #>  htmltools      0.5.8.1    2024-04-04 [1] CRAN (R 4.4.0) #>  knitr          1.49       2024-11-08 [1] CRAN (R 4.4.1) #>  lavaan       * 0.6-19     2024-09-26 [1] CRAN (R 4.4.1) #>  lifecycle      1.0.4      2023-11-07 [1] CRAN (R 4.4.0) #>  magrittr       2.0.3      2022-03-30 [1] CRAN (R 4.4.0) #>  mnormt         2.1.1      2022-09-26 [1] CRAN (R 4.4.0) #>  munsell        0.5.1      2024-04-01 [1] CRAN (R 4.4.0) #>  numDeriv       2016.8-1.1 2019-06-06 [1] CRAN (R 4.4.0) #>  pbivnorm       0.6.0      2015-01-23 [1] CRAN (R 4.4.0) #>  pillar         1.10.1     2025-01-07 [1] CRAN (R 4.4.1) #>  pkgconfig      2.0.3      2019-09-22 [1] CRAN (R 4.4.0) #>  plFA         * 0.1.0      2025-02-01 [1] local #>  quadprog       1.5-8      2019-11-20 [1] CRAN (R 4.4.0) #>  R6             2.5.1      2021-08-19 [1] CRAN (R 4.4.0) #>  Rcpp           1.0.14     2025-01-12 [1] CRAN (R 4.4.1) #>  RcppClock      1.1        2021-11-06 [1] CRAN (R 4.4.0) #>  RcppEigen      0.3.4.0.2  2024-08-24 [1] CRAN (R 4.4.1) #>  RcppParallel   5.1.10     2025-01-24 [1] CRAN (R 4.4.1) #>  rlang          1.1.5      2025-01-17 [1] CRAN (R 4.4.1) #>  rmarkdown      2.29       2024-11-04 [1] CRAN (R 4.4.1) #>  rstudioapi     0.17.1     2024-10-22 [1] CRAN (R 4.4.1) #>  scales         1.3.0      2023-11-28 [1] CRAN (R 4.4.0) #>  sessioninfo    1.2.2      2021-12-06 [1] CRAN (R 4.4.0) #>  stringi        1.8.4      2024-05-06 [1] CRAN (R 4.4.0) #>  stringr        1.5.1      2023-11-14 [1] CRAN (R 4.4.0) #>  tibble         3.2.1      2023-03-20 [1] CRAN (R 4.4.0) #>  tidyselect     1.2.1      2024-03-11 [1] CRAN (R 4.4.0) #>  ucminf         1.2.2      2025-01-23 [1] Github (hdakpo/ucminf@a3a411f) #>  utf8           1.2.4      2023-10-22 [1] CRAN (R 4.4.0) #>  vctrs          0.6.5      2023-12-01 [1] CRAN (R 4.4.0) #>  xfun           0.49       2024-10-31 [1] CRAN (R 4.4.1) #>  yaml           2.3.10     2024-07-26 [1] CRAN (R 4.4.0) #>  #>  [1] /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/library #>  #> ──────────────────────────────────────────────────────────────────────────────"},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/Constraints-class.html","id":null,"dir":"Reference","previous_headings":"","what":"list with constraints — Constraints-class","title":"list with constraints — Constraints-class","text":"list constraints","code":""},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/Dimensions-class.html","id":null,"dir":"Reference","previous_headings":"","what":"List collecting problem dimensions — Dimensions-class","title":"List collecting problem dimensions — Dimensions-class","text":"List collecting problem dimensions","code":""},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/LSAT.html","id":null,"dir":"Reference","previous_headings":"","what":"The Law School Admission Test (LSAT), Section VI — LSAT","title":"The Law School Admission Test (LSAT), Section VI — LSAT","text":"LSAT classical example educational testing measuring   ability traits. test designed measure single   latent ability scale.","code":""},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/LSAT.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Law School Admission Test (LSAT), Section VI — LSAT","text":"","code":"LSAT"},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/LSAT.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The Law School Admission Test (LSAT), Section VI — LSAT","text":"object class tbl_df (inherits tbl, data.frame) 1000 rows 5 columns.","code":""},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/LSAT.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"The Law School Admission Test (LSAT), Section VI — LSAT","text":"LSAT example part data set given Bock Lieberman (1970).","code":""},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/LSAT.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"The Law School Admission Test (LSAT), Section VI — LSAT","text":"Bartholomew, D., Steel, F., Moustaki, . Galbraith, J. (2002) Analysis Interpretation Multivariate Data Social Scientists. London: Chapman Hall. Bock, R. Lieberman, M. (1970) Fitting response model \\(n\\) dichotomously scored items. Psychometrika, 35, 179–197.","code":""},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/LSAT.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The Law School Admission Test (LSAT), Section VI — LSAT","text":"","code":"library(tidyverse) #> ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ── #> ✔ dplyr     1.1.4     ✔ readr     2.1.5 #> ✔ forcats   1.0.0     ✔ stringr   1.5.1 #> ✔ ggplot2   3.5.1     ✔ tibble    3.2.1 #> ✔ lubridate 1.9.4     ✔ tidyr     1.3.1 #> ✔ purrr     1.0.2      #> ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ── #> ✖ dplyr::filter() masks stats::filter() #> ✖ dplyr::lag()    masks stats::lag() #> ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors glimpse(LSAT) #> Rows: 1,000 #> Columns: 5 #> $ y1 <ord> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0… #> $ y2 <ord> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0… #> $ y3 <ord> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1… #> $ y4 <ord> 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0… #> $ y5 <ord> 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0…"},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/StoFit-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Quantities specific for stochastic estimation — StoFit-class","title":"Quantities specific for stochastic estimation — StoFit-class","text":"Quantities specific stochastic estimation","code":""},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/bfi.html","id":null,"dir":"Reference","previous_headings":"","what":"25 Personality items representing 5 factors — bfi","title":"25 Personality items representing 5 factors — bfi","text":"25 personality self report items taken International Personality Item Pool (ipip.ori.org) included part Synthetic Aperture Personality Assessment (SAPA) web based personality assessment project.  data 2800 subjects included demonstration set scale construction, factor analysis, Item Response Theory analysis.  Three additional demographic variables (sex, education, age) also included.","code":""},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/bfi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"25 Personality items representing 5 factors — bfi","text":"","code":"bfi"},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/bfi.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"25 Personality items representing 5 factors — bfi","text":"object class tbl_df (inherits tbl, data.frame) 2236 rows 28 columns.","code":""},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/bfi.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"25 Personality items representing 5 factors — bfi","text":"items ipip (Goldberg, 1999).  data SAPA project (Revelle, Wilt Rosenthal, 2010) , collected Spring, 2010 ( https://www.sapa-project.org/).","code":""},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/bfi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"25 Personality items representing 5 factors — bfi","text":"Unlike psych::bfi data set, data set package retains complete cases variables.","code":""},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/bfi.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"25 Personality items representing 5 factors — bfi","text":"bfi data set items confused BFI (Big Five Inventory) Oliver John colleagues (John, O. P., Donahue, E. M., & Kentle, R. L. (1991). Big Five Inventory–Versions 4a 54. Berkeley, CA: University California,Berkeley, Institute Personality Social Research.)","code":""},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/bfi.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"25 Personality items representing 5 factors — bfi","text":"Goldberg, L.R. (1999) broad-bandwidth, public domain, personality inventory measuring lower-level facets several five-factor models. Mervielde, . Deary, . De Fruyt, F. Ostendorf, F. (eds) Personality psychology Europe. 7. Tilburg University Press. Tilburg, Netherlands. Revelle, W., Wilt, J.,  Rosenthal, . (2010)  Individual Differences Cognition: New Methods examining Personality-Cognition Link Gruszka, .  Matthews, G. Szymura, B. (Eds.) Handbook Individual Differences Cognition: Attention, Memory Executive Control, Springer. Revelle, W,  Condon, D.M.,  Wilt, J.,  French, J.., Brown, .,   Elleman, L.G. (2016) Web phone based data collection using planned missing designs.  Fielding, N.G.,  Lee, R.M.  Blank, G. (Eds). SAGE Handbook Online Research Methods (2nd Ed), Sage Publcations.","code":""},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/bfi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"25 Personality items representing 5 factors — bfi","text":"","code":"library(tidyverse) glimpse(bfi) #> Rows: 2,236 #> Columns: 28 #> $ A1        <ord> 6, 4, 4, 4, 1, 2, 4, 1, 2, 2, 4, 2, 1, 5, 1, 1, 1, 1, 1, 5, … #> $ A2        <ord> 6, 3, 4, 5, 5, 6, 5, 6, 4, 5, 5, 5, 5, 3, 6, 4, 5, 5, 5, 6, … #> $ A3        <ord> 5, 1, 5, 2, 6, 5, 5, 6, 4, 1, 6, 6, 6, 5, 4, 4, 4, 5, 4, 4, … #> $ A4        <ord> 6, 5, 6, 2, 5, 6, 6, 1, 4, 3, 5, 6, 5, 4, 6, 2, 3, 6, 4, 3, … #> $ A5        <ord> 5, 1, 5, 1, 6, 5, 5, 6, 3, 5, 5, 6, 4, 2, 4, 3, 5, 5, 5, 5, … #> $ C1        <ord> 6, 3, 4, 5, 4, 3, 5, 5, 6, 5, 5, 5, 1, 2, 5, 6, 6, 4, 4, 5, … #> $ C2        <ord> 6, 2, 3, 5, 3, 5, 5, 2, 5, 4, 5, 5, 5, 2, 6, 5, 5, 4, 5, 3, … #> $ C3        <ord> 6, 4, 5, 5, 2, 6, 4, 5, 6, 5, 3, 5, 6, 4, 3, 6, 5, 4, 4, 3, … #> $ C4        <ord> 1, 2, 3, 2, 4, 3, 1, 1, 1, 2, 5, 2, 4, 3, 1, 3, 2, 3, 3, 4, … #> $ C5        <ord> 3, 4, 2, 2, 5, 6, 1, 1, 1, 5, 4, 4, 6, 4, 5, 4, 2, 4, 3, 5, … #> $ E1        <ord> 2, 3, 1, 3, 2, 2, 3, 1, 2, 1, 1, 1, 6, 3, 6, 3, 3, 4, 3, 6, … #> $ E2        <ord> 1, 6, 3, 4, 1, 2, 2, 1, 4, 2, 2, 2, 6, 4, 6, 4, 2, 3, 3, 4, … #> $ E3        <ord> 6, 4, 2, 3, 2, 4, 5, 6, 4, 6, 6, 4, 2, 3, 3, 3, 3, 4, 2, 4, … #> $ E4        <ord> 5, 2, 5, 6, 5, 6, 5, 6, 2, 5, 5, 5, 1, 2, 2, 3, 6, 4, 5, 4, … #> $ E5        <ord> 6, 1, 4, 5, 2, 6, 6, 6, 6, 4, 5, 5, 1, 3, 2, 5, 5, 4, 4, 3, … #> $ N1        <ord> 3, 6, 3, 2, 2, 4, 2, 2, 3, 1, 5, 3, 1, 5, 2, 5, 1, 2, 2, 2, … #> $ N2        <ord> 5, 3, 3, 4, 2, 4, 3, 3, 3, 4, 4, 2, 2, 3, 2, 6, 2, 2, 3, 2, … #> $ N3        <ord> 2, 2, 4, 2, 2, 4, 3, 1, 5, 2, 4, 4, 1, 4, 2, 5, 1, 3, 1, 3, … #> $ N4        <ord> 2, 6, 2, 2, 2, 6, 1, 2, 3, 2, 3, 1, 3, 4, 4, 5, 2, 3, 3, 4, … #> $ N5        <ord> 3, 4, 3, 3, 2, 6, 1, 1, 2, 5, 1, 2, 6, 3, 1, 4, 1, 3, 2, 5, … #> $ O1        <ord> 4, 3, 5, 5, 6, 6, 6, 6, 5, 2, 4, 5, 6, 4, 5, 5, 5, 4, 4, 3, … #> $ O2        <ord> 3, 2, 3, 2, 1, 1, 2, 4, 2, 4, 4, 2, 6, 5, 5, 5, 1, 3, 3, 5, … #> $ O3        <ord> 5, 4, 5, 5, 5, 5, 5, 5, 6, 5, 6, 5, 5, 4, 4, 4, 6, 2, 5, 4, … #> $ O4        <ord> 6, 5, 6, 5, 5, 6, 6, 5, 6, 4, 5, 5, 6, 4, 5, 5, 6, 5, 4, 4, … #> $ O5        <ord> 1, 3, 3, 5, 2, 1, 2, 3, 1, 1, 1, 2, 1, 3, 3, 2, 1, 2, 3, 4, … #> $ gender    <int> 2, 1, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 1, 1, … #> $ education <int> 3, 2, 1, 1, 5, 2, 1, 3, 5, 3, 3, 3, 5, 3, 3, 3, 5, 3, 1, 4, … #> $ age       <int> 21, 19, 21, 17, 68, 27, 18, 20, 51, 33, 18, 41, 23, 23, 20, …"},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/build_constrMat.html","id":null,"dir":"Reference","previous_headings":"","what":"Automatic construction of simple constraints matrices — build_constrMat","title":"Automatic construction of simple constraints matrices — build_constrMat","text":"build_constrMat() creates binary matrix entries equal 1 referring free loadings, 0 entries otherwise.","code":""},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/build_constrMat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Automatic construction of simple constraints matrices — build_constrMat","text":"","code":"build_constrMat(   P,   Q,   STRUCT = c(\"simple\", \"triangular\", \"crossed\"),   CROSS = NULL )"},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/build_constrMat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Automatic construction of simple constraints matrices — build_constrMat","text":"P Number items. Q Number latent vaiables. STRUCT Label constraint structure chosen. two possible values: 'triangular', 'simple' 'crossed'. CROSS Integer referring number items latent shares latent +1","code":""},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/cfa.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit Confirmatory Factor Analysis Models — cfa","title":"Fit Confirmatory Factor Analysis Models — cfa","text":"Fit Confirmatory Factor Analysis (CFA) model using plFA() engine using lavaan framework. default, quasi-Newton BFGS optimiser ucminf package used. large data sets, stochastic approximation algorithm can used.","code":""},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/cfa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit Confirmatory Factor Analysis Models — cfa","text":"","code":"cfa(   model,   data,   std.lv = FALSE,   estimator = \"PML\",   estimator.args = list(method = c(\"ucminf\", \"SA\"), init_method = c(\"SA\", \"custom\",     \"standard\"), cpp_control_init = NULL, ncores = 1, valdata = NULL, computevar_numderiv     = FALSE),   start = NULL,   control = list(),   verbose = FALSE,   ... )"},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/cfa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit Confirmatory Factor Analysis Models — cfa","text":"model description user-specified model. Typically, model described using lavaan model syntax. See lavaan::model.syntax information. Alternatively, parameter table (eg. output lavaan::lavaanify() function) also accepted. data data frame containing observed variables used model. Variables must declared ordered factors. std.lv TRUE, metric latent variable determined fixing (residual) variances 1.0. FALSE, metric latent variable determined fixing factor loading first indicator 1.0. estimator estimator PML. estimator provided, lavaan::cfa() used. estimator.args list arguments fit_plFA()–see help file details. Possible options : method One \"ucminf\" (default) quasi-Newton BFGS optimiser, \"SA\" stochastic approximation. init_method One \"SA\" (default) stochastic approximation, \"custom\" user-defined starting values, \"standard\" standard starting values. cpp_control_init list control parameters initialisation algorithm. ncores number cores use parallel computation. valdata Validation data. computevar_numderiv TRUE, asymptotic variance-covariance matrix computed using numerical derivatives. start vector starting values use (order free loadings, thresholds, factor correlations). provided, starting point computed according fit_plFA()'s INIT_METHOD. control list control parameters estimation algorithm. See fit_plFA() information. verbose TRUE, print additional information estimation process. ... Additional arguments passed lavaan().","code":""},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/cfa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit Confirmatory Factor Analysis Models — cfa","text":"plFAlavaan object, subclass lavaan class. Therefore, methods available lavaan objects expected compatible plFAlavaan objects.","code":""},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/cfa.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fit Confirmatory Factor Analysis Models — cfa","text":"lavaan options can used present. options interest : information information matrix use. observed currently supported. se standard error method use. robust.huber.white currently supported.","code":""},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/cfa.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fit Confirmatory Factor Analysis Models — cfa","text":"Katsikatsou, M., Moustaki, ., Yang-Wallentin, F., & Jöreskog, K. G. (2012). Pairwise likelihood estimation factor analysis models ordinal data. Computational Statistics & Data Analysis, 56(12), 4243–4258. https://doi.org/10.1016/j.csda.2012.04.010 Alfonzetti, G., Bellio, R., Chen, Y., & Moustaki, . (2025). Pairwise stochastic approximation confirmatory factor analysis categorical data. British Journal Mathematical Statistical Psychology, 78(1), 22–43. https://doi.org/10.1111/bmsp.12347","code":""},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/cfa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit Confirmatory Factor Analysis Models — cfa","text":"","code":"# A simple binary factor model using the LSAT data fit <- cfa(\"eta =~ y1 + y2 + y3 + y4 + y5\", LSAT, std.lv = TRUE) summary(fit) #> plFA 0.1.0  #>   ⨉  #> lavaan 0.6-19 ended normally after 28 iterations #>  #>   Estimator                                        PML #>   Optimization method                           UCMINF #>   Number of model parameters                        10 #>  #>   Number of observations                          1000 #>  #>  #> Parameter Estimates: #>  #>   Parameterization                               Delta #>   Standard errors                             Sandwich #>   Information bread                           Observed #>   Observed information based on                Hessian #>  #> Latent Variables: #>                    Estimate  Std.Err  z-value  P(>|z|) #>   eta =~                                               #>     y1                0.389    0.061    6.321    0.000 #>     y2                0.397    0.041    9.652    0.000 #>     y3                0.472    0.038   12.493    0.000 #>     y4                0.376    0.043    8.752    0.000 #>     y5                0.340    0.058    5.851    0.000 #>  #> Thresholds: #>                    Estimate  Std.Err  z-value  P(>|z|) #>     y1|t1            -1.433    0.111  -12.946    0.000 #>     y2|t1            -0.550    0.081   -6.834    0.000 #>     y3|t1            -0.133    0.090   -1.476    0.140 #>     y4|t1            -0.716    0.080   -8.921    0.000 #>     y5|t1            -1.126    0.094  -12.015    0.000 #>  #> Variances: #>                    Estimate  Std.Err  z-value  P(>|z|) #>    .y1                0.849                            #>    .y2                0.842                            #>    .y3                0.778                            #>    .y4                0.859                            #>    .y5                0.885                            #>     eta               1.000                            #>"},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/computeVar-PlFaFit-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute variance of the estimates — computeVar,PlFaFit-method","title":"Compute variance of the estimates — computeVar,PlFaFit-method","text":"Compute variance estimates","code":""},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/computeVar-PlFaFit-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute variance of the estimates — computeVar,PlFaFit-method","text":"","code":"# S4 method for class 'PlFaFit' computeVar(OBJ, DATA, NUMDERIV = F, OPTION = \"transformed\", VERBOSE = FALSE)"},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/computeVar-PlFaFit-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute variance of the estimates — computeVar,PlFaFit-method","text":"OBJ Object class plFaFit DATA Original data NUMDERIV TRUE hessian must computed using jacobian OPTION transformed correlations interest. raw inference reparametrised level. VERBOSE TRUE function must print messages","code":""},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/computeVar.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute variance of the estimates — computeVar","title":"Compute variance of the estimates — computeVar","text":"Compute variance estimates","code":""},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/computeVar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute variance of the estimates — computeVar","text":"","code":"computeVar(OBJ, DATA, NUMDERIV = F, OPTION = \"transformed\", VERBOSE = FALSE)"},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/computeVar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute variance of the estimates — computeVar","text":"OBJ Object class plFaFit DATA Original data NUMDERIV TRUE hessian must computed using jacobian OPTION transformed correlations interest. raw inference reparametrised level. VERBOSE TRUE function must print messages","code":""},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/compute_frequencies.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute pairwise frequencies — compute_frequencies","title":"Compute pairwise frequencies — compute_frequencies","text":"returns 5-rows matrix, one column combination items categories. Row0: item k, Row1: item l, Row2; category item k, Row3: category item l, Row4: freq","code":""},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/compute_frequencies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute pairwise frequencies — compute_frequencies","text":"","code":"compute_frequencies(Y, C_VEC)"},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/compute_frequencies.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute pairwise frequencies — compute_frequencies","text":"Y Integer matrix dimension \\(n*p\\), \\(n\\) sample size \\(p\\) number items considered. Categories must coded starting zero. example, item three categories can accept values contained \\({0, 1, 2}\\). C_VEC Integer vector indicating many possible categories associated item 'Y'.","code":""},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/cpp_multiThread_completePairwise.html","id":null,"dir":"Reference","previous_headings":"","what":"Full pairwise iteration — cpp_multiThread_completePairwise","title":"Full pairwise iteration — cpp_multiThread_completePairwise","text":"Evaluate negative log pairwise likelihood gradient complete pool pairs. Used external optimisers. Multithreading options via RcppParallel.","code":""},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/cpp_multiThread_completePairwise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Full pairwise iteration — cpp_multiThread_completePairwise","text":"","code":"cpp_multiThread_completePairwise(   N,   C_VEC,   CONSTRMAT,   CONSTRLOGSD,   LLC,   THETA,   FREQ,   CORRFLAG,   NTHR,   NLOAD,   NCORR,   NVAR,   GRFLAG = 0L,   SILENTFLAG = 1L )"},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/cpp_multiThread_completePairwise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Full pairwise iteration — cpp_multiThread_completePairwise","text":"N Number observations C_VEC Vector containing number categories item CONSTRMAT \\(p*q\\)-dimensional matrix. Elements set NA refers free loading parameters. Elements set numerical values denote fixed values constraints. CONSTRLOGSD \\(q\\)-dimensional vector. Elements set NA refers free latent log standard deviations parameters. Elements set numerical values denote fixed values constraints. LLC Linear loadings constraints. Expects list constraints. See fit_plFA documentation. THETA Parameter vector FREQ Frequency table CORRFLAG TRUE estimate latent correlations. 0 orthogonal latent factors. NTHR Number thresholds parameters. NLOAD Number free loadings parameters NCORR Number free latent correlations parameters. NVAR Number free latent variance parameters. GRFLAG 0 compute likelihood. 1 also compute gradient. SILENTFLAG optional verbose output","code":""},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/estimate_H.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate of H — estimate_H","title":"Estimate of H — estimate_H","text":"Compute sample estimate expected negative Hessian taking advantage second Bartlett's identity single pair level","code":""},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/estimate_H.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate of H — estimate_H","text":"","code":"estimate_H(   C_VEC,   A,   CONSTRLOGSD,   LLC,   THETA,   FREQ,   N,   CORRFLAG,   NTHR,   NLOAD,   NCORR,   NVAR )"},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/estimate_H.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate of H — estimate_H","text":"C_VEC Vector containing number categories item Constraint matrix. Loadings free estimated identified 1. CONSTRLOGSD \\(q\\)-dimensional vector. Elements set NA refers free latent log standard deviations parameters. Elements set numerical values denote fixed values constraints. LLC Linear loadings constraints. Expects list constraints. See fit_plFA documentation. THETA Parameter vector FREQ output pairs_freq() N sample size CORRFLAG 1 estimate latent correlations. 0 orthogonal latent factors. NTHR Number thresholds parameters. NLOAD Number free loadings parameters NCORR Number free latent correlations parameters. NVAR Number free latent variance parameters.","code":""},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/estimate_J.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate of J — estimate_J","title":"Estimate of J — estimate_J","text":"Compute sample estimate variability matrix via sample average outer product composite score","code":""},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/estimate_J.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate of J — estimate_J","text":"","code":"estimate_J(   Y,   C_VEC,   A,   CONSTRLOGSD,   LLC,   THETA,   CORRFLAG,   NTHR,   NLOAD,   NCORR,   NVAR )"},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/estimate_J.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate of J — estimate_J","text":"Y data matrix C_VEC Vector containing number categories item Constraint matrix. Loadings free estimated identified 1. CONSTRLOGSD \\(q\\)-dimensional vector. Elements set NA refers free latent log standard deviations parameters. Elements set numerical values denote fixed values constraints. LLC Linear loadings constraints. Expects list constraints. See fit_plFA documentation. THETA Parameter vector CORRFLAG 1 estimate latent correlations. 0 orthogonal latent factors. NTHR Number thresholds parameters. NLOAD Number free loadings parameters NCORR Number free latent correlations parameters. NVAR Number free latent variance parameters.","code":""},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/extract_par.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract parameters — extract_par","title":"Extract parameters — extract_par","text":"Extract parameters","code":""},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/extract_par.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract parameters — extract_par","text":"","code":"extract_par(   THETA,   OPTION = c(\"list\", \"raw\", \"transformed\"),   CONSTRMAT,   CONSTRLOGSD,   LLC,   NTHR,   NLOAD,   NCORR,   NVAR )"},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/extract_par.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract parameters — extract_par","text":"THETA Unconstrained parameter vector. OPTION Can take values CONSTRMAT \\(p*q\\)-dimensional matrix. Elements set NA refers free loading parameters. Elements set numerical values denote fixed values constraints. CONSTRLOGSD \\(q\\)-dimensional vector. Elements set NA refers free latent log standard deviations parameters. Elements set numerical values denote fixed values constraints. LLC Linear loadings constraints. Expects list constraints. See fit_plFA documentation. NTHR Number thresholds parameters. NLOAD Number free loadings parameters NCORR Number free latent correlations parameters. NVAR Number free latent variance parameters.","code":""},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/extract_theta_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract parameters trajectory along the optimisation — extract_theta_path","title":"Extract parameters trajectory along the optimisation — extract_theta_path","text":"Extract parameters trajectory along optimisation","code":""},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/extract_theta_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract parameters trajectory along the optimisation — extract_theta_path","text":"","code":"extract_theta_path(OBJ, LAB = \"pathAvTheta\", OPTION = \"transformed\")"},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/extract_theta_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract parameters trajectory along the optimisation — extract_theta_path","text":"OBJ Object class FitPlFa LAB Can take values pathTheta raw trajectories pathAvTheta averaged ones. Set default pathAvTheta. OPTION Parameterisation option.","code":""},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/fit_plFA.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit factor models for ordinal data with pairwise likelihood methods — fit_plFA","title":"Fit factor models for ordinal data with pairwise likelihood methods — fit_plFA","text":"Fit latent variable models ordinal variable using pairwise likelihood methods running via quasi-Newton BFGS stochastic approximations.","code":""},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/fit_plFA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit factor models for ordinal data with pairwise likelihood methods — fit_plFA","text":"","code":"fit_plFA(   DATA,   CONSTR_LIST,   METHOD = c(\"ucminf\", \"SA\"),   INIT_METHOD = c(\"SA\", \"custom\", \"standard\"),   NCORES = 1,   VALDATA = NULL,   CONTROL = list(),   CPP_CONTROL_MAIN = NULL,   CPP_CONTROL_INIT = NULL,   INIT = NULL,   VERBOSE = FALSE )"},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/fit_plFA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit factor models for ordinal data with pairwise likelihood methods — fit_plFA","text":"DATA Integer data matrix dimension \\(n*p\\). Categories must coded starting zero. CONSTR_LIST List constraints. must contain METHOD Label method chosen. Possible values : INIT_METHOD 'custom'Uses vector provided via INIT starting point.'standard'Uses cold initialisation loadings initialised 0.5 latent covariance matrix Identity matrix.'SA'Computes starting point using short chain stochastic updates. Updates start standard initialisation point. Set default method. NCORES Integer value setting number threads carry estimation. VALDATA Validation data used monitor convergence stochastic approximations. NULL, data passed via DATA used monitoring purposes. CONTROL List control options pass ucminf. See ucminf::ucminf documentation. CPP_CONTROL_MAIN List control options pass SA optimiser METHOD=\"SA\": CPP_CONTROL_INIT List control options pass SA optimiser INIT_METHOD=\"SA\". See CPP_CONTROL_MAIN details. INIT Initialising vector. provided, starting point computed according INIT_METHOD VERBOSE TRUE verbose output","code":""},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/fit_plFA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit factor models for ordinal data with pairwise likelihood methods — fit_plFA","text":"Object class plFaFit.","code":""},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/fit_plFA.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fit factor models for ordinal data with pairwise likelihood methods — fit_plFA","text":"argument CONSTR_LIST$LLC expected list constraints, e.g. CONSTR_LIST$LLC <- list(constraint_1, constraint2, ...), constraint defined list . example, impose constraint \"L_(2,1)=0.5L_(5,2)+0.25L_(9,3)\" write constraint_1 <- list(c(2,1), c(0.5,5,2), c(0.25, 9,3)). : first vector list 2-dimensional stores coordinates constrained loading. successive triplets represent linear coefficient followed coordinates loading reference. can set arbitrary number triplets constraint.","code":""},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/gen_loadings.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct loading matrix — gen_loadings","title":"Construct loading matrix — gen_loadings","text":"Construct loading matrix","code":""},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/gen_loadings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct loading matrix — gen_loadings","text":"","code":"gen_loadings(   CONSTRMAT,   FIXED = NULL,   SEED = 123,   LB = 0,   UB = 1,   STDLV = TRUE,   LLC = NULL )"},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/gen_loadings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct loading matrix — gen_loadings","text":"CONSTRMAT Binary matrix dimension \\(p*q\\). cell equal \\(1\\) indicates corresponding element loading matrix free estimated. cell equal \\(0\\) fixes corresponding element loading matrix \\(0\\). FIXED Fixed value assign free loadings. 'NULL' draws randomly Unif(0,1) SEED Random seed. LB Lower bound uniform random generator. Default set 0. UB Upper bound uniform random generator. Default set 1. STDLV Logical indicator. Set TRUE fix latent variables scale. Set FALSE fix loadings scale. LLC Linear loadings constraints. Expects list constraints. See fit_plFA documentation.","code":""},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/getPar-PlFaFit-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract parameters — getPar,PlFaFit-method","title":"Extract parameters — getPar,PlFaFit-method","text":"Extract parameters","code":""},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/getPar-PlFaFit-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract parameters — getPar,PlFaFit-method","text":"","code":"# S4 method for class 'PlFaFit' getPar(OBJ, ...)"},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/getPar-PlFaFit-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract parameters — getPar,PlFaFit-method","text":"OBJ Object class PlFaFit. ... Additional arguments","code":""},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/getPar-vector-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract parameters — getPar,vector-method","title":"Extract parameters — getPar,vector-method","text":"Extract parameters","code":""},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/getPar-vector-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract parameters — getPar,vector-method","text":"","code":"# S4 method for class 'vector' getPar(OBJ, ...)"},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/getPar-vector-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract parameters — getPar,vector-method","text":"OBJ Raw theta vector extract 'transformed' 'list'. ... Additional arguments","code":""},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/getPar.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract parameters — getPar","title":"Extract parameters — getPar","text":"Extract parameters","code":""},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/getPar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract parameters — getPar","text":"","code":"getPar(OBJ, ...)"},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/getPar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract parameters — getPar","text":"OBJ Object class StoFit, PlFaFit. Also usable raw theta vector extract 'transformed' 'list'. ... Additional arguments","code":""},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/getThetaPath-PlFaFit-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract parameters trajectory along the optimisation — getThetaPath,PlFaFit-method","title":"Extract parameters trajectory along the optimisation — getThetaPath,PlFaFit-method","text":"Extract parameters trajectory along optimisation","code":""},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/getThetaPath-PlFaFit-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract parameters trajectory along the optimisation — getThetaPath,PlFaFit-method","text":"","code":"# S4 method for class 'PlFaFit' getThetaPath(OBJ, LAB = \"pathAvTheta\", OPTION = \"transformed\")"},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/getThetaPath-PlFaFit-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract parameters trajectory along the optimisation — getThetaPath,PlFaFit-method","text":"OBJ Object class StoFit LAB Can take values pathTheta raw trajectories pathAvTheta averaged ones. Set default pathAvTheta. OPTION Parameterisation option.","code":""},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/getThetaPath.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract parameters trajectory along the optimisation — getThetaPath","title":"Extract parameters trajectory along the optimisation — getThetaPath","text":"Extract parameters trajectory along optimisation","code":""},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/getThetaPath.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract parameters trajectory along the optimisation — getThetaPath","text":"","code":"getThetaPath(OBJ, LAB = \"pathAvTheta\", OPTION = \"transformed\")"},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/getThetaPath.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract parameters trajectory along the optimisation — getThetaPath","text":"OBJ Object class StoFit LAB Can take values pathTheta raw trajectories pathAvTheta averaged ones. Set default pathAvTheta. OPTION Parameterisation option.","code":""},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/get_R.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract latent correlation matrix from unconstrained parameter vector — get_R","title":"Extract latent correlation matrix from unconstrained parameter vector — get_R","text":"Extract latent correlation matrix unconstrained parameter vector","code":""},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/get_R.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract latent correlation matrix from unconstrained parameter vector — get_R","text":"","code":"get_R(THETA, NTHR, NLOAD, NCORR, NVAR, Q)"},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/get_R.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract latent correlation matrix from unconstrained parameter vector — get_R","text":"THETA Unconstrained parameter vector NTHR Number thresholds parameters. NLOAD Number free loadings parameters NCORR Number free latent correlations parameters. NVAR Number free latent variance parameters. Q Number latent variables","code":""},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/get_R.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract latent correlation matrix from unconstrained parameter vector — get_R","text":"Latent correlation matrix","code":""},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/get_S.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract latent covariance matrix from unconstrained parameter vector — get_S","title":"Extract latent covariance matrix from unconstrained parameter vector — get_S","text":"Extract latent covariance matrix unconstrained parameter vector","code":""},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/get_S.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract latent covariance matrix from unconstrained parameter vector — get_S","text":"","code":"get_S(THETA, CONSTRLOGSD, NTHR, NLOAD, NCORR, NVAR, Q)"},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/get_S.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract latent covariance matrix from unconstrained parameter vector — get_S","text":"THETA Unconstrained parameter vector CONSTRLOGSD \\(Q\\)-dimensional vector. Elements set NA refers free latent log standard deviations parameters. Elements set numerical values denote fixed values constraints. NTHR Number thresholds parameters. NLOAD Number free loadings parameters NCORR Number free latent correlations parameters. NVAR Number free latent variance parameters. Q Number latent variables","code":""},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/get_S.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract latent covariance matrix from unconstrained parameter vector — get_S","text":"Latent covariance matrix dimension  \\(Q*Q\\).","code":""},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/get_corr.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract vector of latent correlations from unconstrained parameter vector — get_corr","title":"Extract vector of latent correlations from unconstrained parameter vector — get_corr","text":"Extract vector latent correlations unconstrained parameter vector","code":""},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/get_corr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract vector of latent correlations from unconstrained parameter vector — get_corr","text":"","code":"get_corr(THETA, NTHR, NLOAD, NCORR, NVAR, Q)"},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/get_corr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract vector of latent correlations from unconstrained parameter vector — get_corr","text":"THETA Unconstrained parameter vector NTHR Number thresholds parameters. NLOAD Number free loadings parameters NCORR Number free latent correlations parameters. NVAR Number free latent variance parameters. Q Number latent variables","code":""},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/get_corr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract vector of latent correlations from unconstrained parameter vector — get_corr","text":"Vector latent correlations","code":""},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/get_lambda.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract free loadings from parameter vector — get_lambda","title":"Extract free loadings from parameter vector — get_lambda","text":"Extract free loadings parameter vector","code":""},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/get_lambda.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract free loadings from parameter vector — get_lambda","text":"","code":"get_lambda(THETA, NTHR, NLOAD)"},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/get_lambda.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract free loadings from parameter vector — get_lambda","text":"THETA Unconstrained parameter vector NTHR Number thresholds parameters. NLOAD Number free loadings parameters","code":""},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/get_theta.html","id":null,"dir":"Reference","previous_headings":"","what":"Get full parameter vector — get_theta","title":"Get full parameter vector — get_theta","text":"Assemble parameter vector starting threshold vector, latent covariance matrix loading matrix","code":""},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/get_theta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get full parameter vector — get_theta","text":"","code":"get_theta(   THRESHOLDS,   LOADINGS,   LATENT_COV,   CAT,   CONSTRMAT,   CONSTRVAR,   CORRFLAG,   STDLV )"},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/get_theta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get full parameter vector — get_theta","text":"THRESHOLDS Numerical vector thresholds parameters. \\(p\\) items \\(c\\) possible categories, contains \\(p(c-1)\\) elements. LOADINGS Numerical matrix dimension \\(p*q\\), \\(q\\) number latent variables. LATENT_COV Latent covariance matrix dimension \\(q*q\\). CAT Integer vector storing possible number categories item. Values must ordered following items order dataset. CONSTRMAT \\(p*q\\)-dimensional matrix. Elements set NA refers free loading parameters. Elements set numerical values denote fixed values constraints. CONSTRVAR \\(q\\)-dimensional vector. Elements set NA refers free latent variance parameters. Elements set numerical values denote fixed values constraints. CORRFLAG Logical indicator. Set FALSE latent variables independent. Set TRUE otherwise. STDLV Logical indicator. Set TRUE fix latent variables scale. Set FALSE fix loadings scale.","code":""},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/pairs_freq.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute pairwise frequencies — pairs_freq","title":"Compute pairwise frequencies — pairs_freq","text":"Compute pairwise frequencies","code":""},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/pairs_freq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute pairwise frequencies — pairs_freq","text":"","code":"pairs_freq(Y, C_VEC)"},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/pairs_freq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute pairwise frequencies — pairs_freq","text":"Y Integer matrix dimension \\(n*p\\), \\(n\\) sample size \\(p\\) number items considered. Categories must coded starting zero. example, item three categories can accept values contained \\(\\{0, 1, 2\\}\\). C_VEC Integer vector indicating many possible categories associated item 'Y'.","code":""},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/pairs_freq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute pairwise frequencies — pairs_freq","text":"returns 5-rows matrix combination items categories columns. Row0: item k, Row1: item l, Row2; category item k, Row3: category item l, Row4: freq computed just , optimization complete pairwise","code":""},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/plFAlavaan-class.html","id":null,"dir":"Reference","previous_headings":"","what":"plFAlavaan Class — plFAlavaan-class","title":"plFAlavaan Class — plFAlavaan-class","text":"class extends lavaan class.","code":""},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/show-PlFaFit-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Show method for the output of fit_plFA() — show,PlFaFit-method","title":"Show method for the output of fit_plFA() — show,PlFaFit-method","text":"Show method output fit_plFA()","code":""},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/show-PlFaFit-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show method for the output of fit_plFA() — show,PlFaFit-method","text":"","code":"# S4 method for class 'PlFaFit' show(object)"},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/show-PlFaFit-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show method for the output of fit_plFA() — show,PlFaFit-method","text":"object Object class StoFit","code":""},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/sim_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate new data — sim_data","title":"Simulate new data — sim_data","text":"Simulate data given values parameters thresholds, loadings latent correlations","code":""},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/sim_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate new data — sim_data","text":"","code":"sim_data(SAMPLE_SIZE, LOADINGS, THRESHOLDS, LATENT_COV, SEED = 123)"},{"path":"https://giuseppealfonzetti.github.io/plFA/reference/sim_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate new data — sim_data","text":"SAMPLE_SIZE Number observations simulate. LOADINGS Matrix loadings, dimensions \\(p*q\\). THRESHOLDS Vector thresholds fo single item. assumed items. LATENT_COV Latent correlation matrix. Dimension \\(q*q\\). SEED Numeric seed random generation.","code":""},{"path":"https://giuseppealfonzetti.github.io/plFA/news/index.html","id":"plfa-010","dir":"Changelog","previous_headings":"","what":"plFA 0.1.0","title":"plFA 0.1.0","text":"version stable enough use, talk Psychoco 2025 (Ghent). Added user-friendly lavaan-style cfa() wrapper. (Preparing ) Initial CRAN submission.","code":""}]
